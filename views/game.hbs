<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M" crossorigin="anonymous">        <!-- < script src="js/chess.js"></script> -->
        <link rel="stylesheet" href="stylesheets/game.css" />
        <script src="/socket.io/socket.io.js"></script>
        <script src="js/moveprotocol.js"></script>
        <script src="chessboardjs-0.3.0/js/chessboard-0.3.0.js"></script>
        <link rel="stylesheet" href="chessboardjs-0.3.0/css/chessboard-0.3.0.css">
        <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
        <script src="scripts/chess.js/chess.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
        <script src="js/chessboard.js"></script>
        <script src="js/game.js"></script>
        <script src="/chat.io/chat.io.js"></script>
    </head>
    <body>
        <div class="container-fluid content">
            <div class="row justify-content-around sub-content">
                <div id="board-wrapper" class="left-content col-6">
                    <div id="teamname" class="row ">Your team is {{teamName}}, {{currTeam}}'s turn</div>
                    <div id="board" style="margin: auto"></div>
                </div>
                <div class="right-content col-4" style="border:2px">
                    <div class="tab">
                        <button class="tablinks" onclick="replace_this_function()">Poll</button>
                        <button class="tablinks" onclick="replace_this_function()">History</button>
                        <button class = "tablinks" onclick = "replace_this_function()">Chat</button>
                    </div>
                    <div id="Poll" class="tabcontent">
                        Test
                    </div>
                    <div id="History" class="tabcontent">
                        Test 2
                    </div>
                    
                    <div class = "chat">
                        <div id="lines"></div>
                        <input type="text" id="input" disabled="disabled"/>
                        
                        <!-- MOVE SCRIPT TO ANOTHER PLACE LATER -->
                        <script>
                        $(function() {
                            var socket = io.connect('http://localhost:8080/chat');
                            var lines = $('#lines');

                            socket.on('connect', function () {
                                console.log('CON')
                                lines.addClass('connected');
                                $('#input').addClass('connected').prop('disabled', '');
                            });

                            socket.on('disconnect', function() {
                                console.log('DISC');
                                lines.removeClass('connected');
                                $('#input').removeClass('connected').prop('disabled', 'disabled');
                            });

                            socket.on('message', function (message) {
                                lines.append($('<p>').append($('<em>').text(message)));
                                lines.prop('scrollTop', lines.prop('scrollHeight'));
                            });
                            socket.on('say', function (user, message) {
                                lines.append($('<p>').append($('<b>').text(user + '> ')).append(message))
                                lines.prop('scrollTop', lines.prop('scrollHeight'));
                            });
                            socket.on('whisper', function (user, message) {
                                lines.append($('<p>').append($('<em>').text(user + ' -> ' + message)))
                                lines.prop('scrollTop', lines.prop('scrollHeight'));
                            });
                            socket.on('join', function (user) {
                                lines.append($('<p>').append($('<em>').text(user + ' joined the channel.')));
                                lines.prop('scrollTop', lines.prop('scrollHeight'));
                            });
                            socket.on('leave', function (user) {
                                lines.append($('<p>').append($('<em>').text(user + ' left the channel.')));
                                lines.prop('scrollTop', lines.prop('scrollHeight'));
                            });

                            $('#input').keypress(function (e) {
                                var s, c;
                                // enter key pressed?
                                if (13 === e.which) {
                                    s = this.value;
                                    // slash command?
                                    if ('/' === s[0]) {
                                        // get parameters for command
                                        s = s.split(' ');
                                        // remove slash from command name
                                        c = s[0].slice(1);
                                        // remove command name from parameters list
                                        s = s.slice(1);
                                        switch (c) {
                                            // whisper command
                                            case 'w':
                                            case 'whisper':
                                            case 'msg':
                                                // get target user and join remaining parameters as text
                                                var target = s[0], message = s.slice(1).join(' ');
                                                socket.emit('whisper', target, message);
                                                lines.append($('<p>').append($('<em>').text(target + ' <- ' + message)))
                                                break;
                                                // join command
                                            case 'j':
                                            case 'join':
                                                // first parameter is channel, ignore rest
                                                var channel = s[0];
                                                socket.emit('join', channel, function (err) {
                                                    if (err) return lines.append($('<p>').append($('<em>').text(err)));
                                                    lines.append($('<p>').append($('<em>').text('You joined ' + channel)));
                                                });
                                                break;
                                            // leave command
                                            case 'l':
                                            case 'leave':
                                            case 'part':
                                                socket.emit('leave', function (err) {
                                                    if (err) return lines.append($('<p>').append($('<em>').text(err)));
                                                    lines.append($('<p>').append($('<em>').text('You joined the lobby')));
                                                });
                                                
                                        }
                                    } else {
                                        socket.emit('say', s);
                                    }
                                    this.value = '';
                                }
                            });
                        });
                    </script>
                    </div>                    
                </div>
            </div>
        </div>
        <!-- <div id="board" style="width: 400px"></div> -->
    </body> 
    <script>sendMove("a1", "a2");</script>
</html>
